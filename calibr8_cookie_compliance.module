<?php
/**
 * @file
 * Calibrate EU cookie compliance.
 */

/**
 * Implements hook_menu().
 */
function calibr8_cookie_compliance_menu() {
  $items['admin/config/system/calibr8-cookie-compliance'] = [
    'title' => 'Calibr8 Cookie Compliance',
    'description' => 'Make your website compliant with the EU Directive on Privacy and Electronic Communications.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['calibr8_cookie_compliance_admin_form'],
    'access arguments' => ['administer calibr8 cookie compliance'],
    'file' => 'calibr8_cookie_compliance.admin.inc',
  ];
  return $items;
}

/**
 * Implements hook_page_build(&$page).
 */
function calibr8_cookie_compliance_page_build(&$page) {
  global $language;

  $settings = calibr8_cookie_compliance_get_settings();
  if (path_is_admin(current_path()) || empty($settings) || !isset($settings['popup_info']['value'])) {
    return;
  }

  $languageShortCode = $language->language;

  $page['content']['cookie_compliance'] = array(
    '#markup' => theme('calibr8_cookie_compliance_popup', [
      'message' => _calibr8_cookie_compliance_translate('popup_info', $settings['popup_info']['value'], $languageShortCode),
      'agree_button' => _calibr8_cookie_compliance_translate('popup_agree_button_message', $settings['popup_agree_button_message'], $languageShortCode),
      'disagree_button' => _calibr8_cookie_compliance_translate('popup_disagree_button_message', $settings['popup_disagree_button_message'], $languageShortCode),
    ]),
    '#weight' => 99,
  );

  $page['content']['cookie_compliance']['#attached']['js'][] = [
    'type' => 'setting',
    'data' => [
      'calibr8CookieCompliance' => [
        'agree_value' => $settings['cookie_agree']['cookie_agree_value'],
        'disagree_value' => $settings['cookie_disagree']['cookie_disagree_value'],
      ],
    ],
  ];
}

/**
 * Implements hook_permission().
 */
function calibr8_cookie_compliance_permission() {
  return [
    'administer calibr8 cookie compliance' => [
      'title' => t('Administer the calibr8 cookie compliance settings'),
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function calibr8_cookie_compliance_theme() {
  $path = drupal_get_path('module', 'calibr8_cookie_compliance') . '/templates';
  return [
    'calibr8_cookie_compliance_popup' => [
      'template' => 'calibr8-cookie-compliance-popup',
      'variables' => [
        'message' => NULL,
        'agree_button' => NULL,
        'disagree_button' => NULL,
      ],
      'path' => $path,
    ],
    'calibr8_cookie_compliance_status' => [
      'template' => 'calibr8-cookie-compliance-status',
      'variables' => [
        'status_text' => NULL,
        'agree_text' => NULL,
        'disagree_text' => NULL,
        'agree_link_text' => NULL,
        'disagree_link_text' => NULL,
      ],
      'path' => $path,
    ],
  ];
}

/**
 *
 * Retrieves settings from the database.
 *
 * @return settings
 */

function calibr8_cookie_compliance_get_settings() {
  return variable_get('calibr8_cookie_compliance', []);
}

/**
 * Implements hook_block_info().
 */
function calibr8_cookie_compliance_block_info() {
  $blocks = [];
  $blocks['calibr8_cookiec_status'] = [
    'info' => t('calibr8 cookie compliance status block'),
  ];

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function calibr8_cookie_compliance_block_view($delta='') {
  $block = [];
  switch ($delta) {
    case 'calibr8_cookiec_status' :
      $block['content'] = _calibr8_cookie_compliance_status_block_content();
      break;
  }

  return $block;
}

/**
 * Returns the HTML for the status block.
 *
 * @return String
 */
function _calibr8_cookie_compliance_status_block_content() {
  global $language;

  $settings = calibr8_cookie_compliance_get_settings();
  if (empty($settings)) {
    return;
  }

  $languageShortCode = $language->language;

  return theme('calibr8_cookie_compliance_status', [
    'status_text' => _calibr8_cookie_compliance_translate('status_text', $settings['status_text']['value'], $languageShortCode),
    'agree_text' => _calibr8_cookie_compliance_translate('cookie_agree_text', $settings['cookie_agree']['cookie_agree_text'], $languageShortCode),
    'disagree_text' => _calibr8_cookie_compliance_translate('cookie_disagree_text', $settings['cookie_disagree']['cookie_disagree_text'], $languageShortCode),
    'agree_link_text' => _calibr8_cookie_compliance_translate('cookie_agree_link_text', $settings['cookie_agree']['cookie_agree_link_text'], $languageShortCode),
    'disagree_link_text' => _calibr8_cookie_compliance_translate('cookie_disagree_link_text', $settings['cookie_disagree']['cookie_disagree_link_text'], $languageShortCode),
  ]);
}

/**
 * Get translated string if supported
 *
 * @param $name
 *  UQ string
 * @param $string
 * @param null $langcode
 *
 * @return array|bool|mixed|string
 */
function _calibr8_cookie_compliance_translate($name, $string, $langcode = NULL) {
  return function_exists('i18n_string') ? htmlspecialchars_decode(i18n_string($name, $string, ['langcode' => $langcode])) : $string;
}

/**
 * Update a string when it's updated in the backend.
 *
 * @param $name
 * @param $string
 * @param null $langcode
 *
 * @return array|bool|mixed|string
 */
function _calibr8_cookie_compliance_translate_update($name, $string, $langcode = NULL) {
  return function_exists('i18n_string') ? i18n_string($name, $string, ['update' => TRUE, 'langcode' => $langcode]) : FALSE;
}
