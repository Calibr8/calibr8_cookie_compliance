<?php

/**
 * @file
 * Calibr8 Cookie Compliance module.
 */

use Drupal\Core\Url;
use Drupal\Core\Template\Attribute;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Link;

/**
 * Implements hook_page_attachments().
 */
function calibr8_cookie_compliance_page_attachments(&$attachments) {

  // Get config.
  $config = \Drupal::config('calibr8_cookie_compliance.settings');

  // Create render array.
  $html_info = [
    '#theme' => 'calibr8_cookie_info',
    '#attributes' => new Attribute([
      'id' => 'calibr8-cookie-compliance',
      'class' => [],
    ]),
    '#notification_message' => [
      '#markup' => new TranslatableMarkup($config->get('notification_message')),
    ],
    '#info_link' => '',
    '#accept_link' => '',
  ];

  // Generate more link.
  $info_link_url = $config->get('info_link_url');
  if (isset($info_link_url['route_name']) && $config->get('info_link_label')) {
    $url_object = Url::fromRoute($info_link_url['route_name'], $info_link_url['route_parameters']);
    $html_info['#info_link'] = Link::fromTextAndUrl(new TranslatableMarkup($config->get('info_link_label')), $url_object)->toString();
  }

  // Generate accept link.
  if ($config->get('accept_link_style') == 'close_icon') {
    $html_info['#attributes']['class'][] = 'accept-style--close-icon';
    $accept_link = '<a href="#" id="allow-cookies-link" class="button-circle icon-close"><span class="element-invisible">%s</span></a>';
  }
  else {
    $html_info['#attributes']['class'][] = 'accept-style--button';
    $accept_link = '<a href="#" id="allow-cookies-link" class="button button-secondary">%s</a>';
  }
  $html_info['#accept_link'] = [
    '#markup' => sprintf($accept_link, new TranslatableMarkup($config->get('accept_link_label'))),
  ];

  // Render markup.
  $markup = \Drupal::service('renderer')->renderRoot($html_info);

  $attachments['#attached']['library'][] = 'calibr8_cookie_compliance/calibr8_cookie_compliance';
  $attachments['#attached']['drupalSettings']['calibr8_cookie_compliance'] = [
    'markup' => $markup,
    'cookie_expiration' => $config->get('cookie_expiration'),
  ];
}

/**
 * Implements hook_theme().
 */
function calibr8_cookie_compliance_theme() {
  return [
    'calibr8_cookie_info' => [
      'variables' => [
        'attributes' => [],
        'notification_message' => [],
        'info_link' => [],
        'accept_link' => [],
      ],
      'template' => 'cookie_info',
    ],
  ];
}
